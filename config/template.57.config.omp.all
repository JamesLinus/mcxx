# nvcc (CUDA)
[mccall : omp-base]
language = C
options = --cuda --opencl
preprocessor_name = @NVCC@
preprocessor_options = -D__CUDABE__ -I@CUDA_INCLUDES@ -include nanos-gpu.h -include nanos-opencl.h -D_MERCURIUM_OPENCL_
compiler_name = @NVCC@
linker_name = @NVCC@
linker_options = -lnanox-gpu-api
#compiler_dto = remove_attributes:string:host,device
compiler_phase = libtlnanox-cuda.so
#compiler_phase = libtl-remove-attrs.so
compiler_phase = libtlnanox-opencl.so
linker_options = -lnanox-opencl-api

[mcxxall : omp-base]
language = C++
options = --cuda --opencl
preprocessor_name = @NVCC@
preprocessor_options = -D__CUDABE__ -I@CUDA_INCLUDES@ -include nanos-gpu.h -include nanos-opencl.h -D_MERCURIUM_OPENCL_
compiler_name = @NVCC@
linker_name = @NVCC@
linker_options = -lnanox-gpu-api
#compiler_dto = remove_attributes:string:host,device
compiler_phase = libtlnanox-cuda.so
#compiler_phase = libtl-remove-attrs.so
compiler_phase = libtlnanox-opencl.so
linker_options = -lnanox-opencl-api
