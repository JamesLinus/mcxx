# OpenMP + Nanos 
[omp-base]
options = --openmp
{omp-dry-run|openmp-dry-run} options = --variable=omp_dry_run:1
{debug} options = -g
{(instrument|instrumentation)} options = --variable=instrument:1
preprocessor_name = gcc
preprocessor_options = -E
compiler_name = gcc
compiler_options =
linker_name = gcc
linker_options = -Xlinker --add-needed
{openmp} compiler_phase = libtlomp-base.so
{openmp} pragma_prefix = nanos
{openmp} compiler_phase = libtlnanos-version.so
# nanos++
{openmp} preprocessor_options = -I@NANOX_INCLUDES@ -D_OPENMP=200805 -include nanos.h -include nanos_omp.h
#{interm-simd} options = --variable=interm-simd:1
{simd} preprocessor_options = @SIMD_INCLUDES@
{simd} compiler_options = @SIMD_FLAGS@
{simd} options = --variable=simd_enabled:1
{svml} options = --variable=svml_enabled:1
{svml} linker_options = -lsvml
{ffast-math} options = --variable=ffast_math_enabled:1
{ffast-math} compiler_options = -ffast-math
#{acml} linker_options = -lacml_mv
{openmp,!(omp-dry-run|openmp-dry-run),!debug,!(instrument|instrumentation)} linker_options = -L@NANOX_LIBS@/performance -Xlinker @RPATH_PARAMETER@ -Xlinker @NANOX_LIBS@/performance
{openmp,!(omp-dry-run|openmp-dry-run),debug,!(instrument|instrumentation)} linker_options = -L@NANOX_LIBS@/debug -Xlinker @RPATH_PARAMETER@ -Xlinker @NANOX_LIBS@/debug
{openmp,!(omp-dry-run|openmp-dry-run),!debug,(instrument|instrumentation)} linker_options = -L@NANOX_LIBS@/instrumentation -Xlinker @RPATH_PARAMETER@ -Xlinker @NANOX_LIBS@/instrumentation
{openmp,!(omp-dry-run|openmp-dry-run),debug,(instrument|instrumentation)} linker_options = -L@NANOX_LIBS@/instrumentation-debug -Xlinker @RPATH_PARAMETER@ -Xlinker @NANOX_LIBS@/instrumentation-debug
{openmp,!(omp-dry-run|openmp-dry-run),!ompss} linker_options = @CUDA_RPATH@ -Xlinker --no-as-needed -lnanox-omp -lnanox-c -lnanox -pthread -lrt
{openmp,!(omp-dry-run|openmp-dry-run),ompss} linker_options = @CUDA_RPATH@ -Xlinker --no-as-needed -lnanox-ss -lnanox-omp -lnanox-c -lnanox -pthread -lrt
{openmp} compiler_phase = libtlnanox-lowering.so
{openmp} compiler_phase = libcodegen-vector.so
