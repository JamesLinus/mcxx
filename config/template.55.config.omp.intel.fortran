[plainimfc : fortran-base]
language = Fortran
options = --do-not-wrap-modules --fortran-array-descriptor=ifort
fortran_preprocessor_name = @IFORT@
fortran_preprocessor_options = -P
compiler_name = @IFORT@
linker_name = @IFORT@
linker_options =

[ifort-plainfc : plainimfc]

[imfc : omp-base]
language = Fortran
options = --do-not-wrap-modules --fortran-array-descriptor=ifort --vector-flavor=intel --enable-ms-builtins --enable-intel-vector-types
options = -I @PKGDATADIR@/fortran/openmp
fortran_preprocessor_name = @IFORT@
fortran_preprocessor_options = -P
compiler_name = @IFORT@
compiler_options = -recursive -assume realloc_lhs -reentrancy threaded
linker_name = @IFORT@
linker_options = -reentrancy threaded
{mmic} preprocessor_options = -mmic
{mmic} compiler_options = -mmic
{mmic} linker_options = -mmic -lifcore -limf -lirng -lintlc -lsvml
@DISABLE_CUDA@{!mmic}preprocessor_options = -D__CUDABE__ -I@CUDA_INCLUDES@ -include nanos-gpu.h
@DISABLE_CUDA@{!mmic}options = --cuda
@DISABLE_CUDA@{!mmic}linker_options = -lnanox-gpu-api
@DISABLE_CUDA@{!mmic}compiler_phase = libtlnanox-cuda.so
@DISABLE_OPENCL@{!mmic}options = --opencl
@DISABLE_OPENCL@{!mmic}preprocessor_options = -include nanos-opencl.h -D_MERCURIUM_OPENCL_
@DISABLE_OPENCL@{!mmic}compiler_phase = libtlnanox-opencl.so
@DISABLE_OPENCL@{!mmic}linker_options = -lnanox-opencl-api

[imf95 : imfc]
[ifort-mfc : imfc]
