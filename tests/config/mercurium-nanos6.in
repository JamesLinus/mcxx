#!/usr/bin/env bash

CPLUSPLUS_2011=0

if [ "$1" = "c++11" ];
then
  CPLUSPLUS_2011=1
fi

function detect_gcc_version() {

    A=$(g++ -v 2>&1 | tail -n 1 | sed -e 's,^.*version\s*\([0-9]\)\.\([0-9]\+\)\(\.[0-9]\+\)*.*$,export GCC_VERSION_MAJOR=\1\nexport GCC_VERSION_MINOR=\2,')
    eval $A

}

if [ "$TEST_LANGUAGE" = "fortran" -a @FORTRAN_TESTS_ENABLED@ = no ];
then

cat <<EOF
test_ignore=yes
EOF

exit

fi


if [ $CPLUSPLUS_2011 = 1 ];
then

detect_gcc_version

# Only for GCC 4.8
if [ $GCC_VERSION_MAJOR -lt 3 -o '(' $GCC_VERSION_MAJOR -eq 4 -a $GCC_VERSION_MINOR -lt 8 ')' ];
then

cat <<EOF
test_ignore=yes
test_ignore_reason="requires g++ 4.8 or better"
EOF

exit

fi

fi

source @abs_builddir@/mercurium-libraries

cat <<EOF
NANOS6_CC="@abs_top_builddir@/src/driver/plaincxx --output-dir=@abs_top_builddir@/tests --profile=mcc --config-dir=@abs_top_builddir@/config --verbose"
NANOS6_CXX="@abs_top_builddir@/src/driver/plaincxx --output-dir=@abs_top_builddir@/tests --profile=mcxx --config-dir=@abs_top_builddir@/config --verbose"
NANOS6_FC="@abs_top_builddir@/src/driver/plaincxx --output-dir=@abs_top_builddir@/tests --profile=mfc --config-dir=@abs_top_builddir@/config -I@abs_top_builddir@/support/openmp/fortran --verbose"
EOF

if [ $CPLUSPLUS_2011 = 1 ];
then
cat <<EOF
NANOS6_CXX="\${NANOS6_CXX} -std=c++11"
EOF
fi

# COMMON_NANOS6_CFLAGS="-DNANOS6"

cat <<EOF
compile_versions="\${compile_versions} nanos6_mercurium"

test_CC_nanos6_mercurium="\${NANOS6_CC}"
test_CXX_nanos6_mercurium="\${NANOS6_CXX}"
test_FC_nanos6_mercurium="\${NANOS6_FC}"

test_FFLAGS="\${test_FFLAGS} --fpc=@abs_top_builddir@/src/driver/fortran/.libs/mf03-prescanner"

test_CFLAGS_nanos6_mercurium=" -std=gnu99 ${COMMON_NANOS6_CFLAGS} "
test_CXXFLAGS_nanos6_mercurium=" ${COMMON_NANOS6_CFLAGS} "
test_FFLAGS_nanos6_mercurium=" "

test_LDFLAGS_nanos6_mercurium="@abs_top_builddir@/lib/perish.o"

EOF

if [ "$TEST_LANGUAGE" = "c" ];
then
  if [ ! -z "@ICC@" ];
  then
cat <<EOF
NANOS6_IMCC="@abs_top_builddir@/src/driver/plaincxx --output-dir=@abs_top_builddir@/tests --profile=imcc --config-dir=@abs_top_builddir@/config --verbose"
compile_versions="\${compile_versions} nanos6_imcc"
test_CC_nanos6_imcc="\${NANOS6_IMCC}"
test_CFLAGS_nanos6_imcc=" ${COMMON_NANOS6_CFLAGS} "
test_LDFLAGS_nanos6_imcc="@abs_top_builddir@/lib/perish.o"
EOF
  fi

  if [ ! -z "@XLC@" ];
  then
cat <<EOF
NANOS6_XLMCC="@abs_top_builddir@/src/driver/plaincxx --output-dir=@abs_top_builddir@/tests --profile=xlmcc --config-dir=@abs_top_builddir@/config --verbose"
compile_versions="\${compile_versions} nanos6_xlmcc"
test_CC_nanos6_xlmcc="\${NANOS6_XLMCC}"
test_CFLAGS_nanos6_xlmcc=" ${COMMON_NANOS6_CFLAGS} "
test_LDFLAGS_nanos6_xlmcc="@abs_top_builddir@/lib/perish.o"
EOF
  fi
fi

if [ "$TEST_LANGUAGE" = "cpp" ];
then
  if [ ! -z "@ICPC@" ];
  then
cat <<EOF
NANOS6_IMCXX="@abs_top_builddir@/src/driver/plaincxx --output-dir=@abs_top_builddir@/tests --profile=imcxx --config-dir=@abs_top_builddir@/config --verbose"
compile_versions="\${compile_versions} nanos6_imcxx"
test_CXX_nanos6_imcxx="\${NANOS6_IMCXX}"
test_CXXFLAGS_nanos6_imcxx=" ${COMMON_NANOS6_CFLAGS} "
test_LDFLAGS_nanos6_imcxx="@abs_top_builddir@/lib/perish.o"
EOF
  fi

  if [ ! -z "@XLCXX@" ];
  then
cat <<EOF
NANOS6_XLMCXX="@abs_top_builddir@/src/driver/plaincxx --output-dir=@abs_top_builddir@/tests --profile=xlmcxx --config-dir=@abs_top_builddir@/config --verbose"
compile_versions="\${compile_versions} nanos6_xlmcxx"
test_CXX_nanos6_xlmcxx="\${NANOS6_XLMCXX}"
test_CXXFLAGS_nanos6_xlmcxx=" ${COMMON_NANOS6_CFLAGS} "
test_LDFLAGS_nanos6_xlmcxx="@abs_top_builddir@/lib/perish.o"
EOF
  fi
fi

if [ "$TEST_LANGUAGE" = "fortran" ];
then
  if [ ! -z "@IFORT@" ];
  then
cat <<EOF
NANOS6_IMFC="@abs_top_builddir@/src/driver/plaincxx --output-dir=@abs_top_builddir@/tests --profile=imfc --config-dir=@abs_top_builddir@/config --verbose"
compile_versions="\${compile_versions} nanos6_imfc"
test_FC_nanos6_imfc="\${NANOS6_IMFC}"
test_FFLAGS_nanos6_imfc=" "
test_LDFLAGS_nanos6_imfc="@abs_top_builddir@/lib/perish.o"
test_ENV_nanos6_imfc="FOR_IGNORE_EXCEPTIONS=1"
EOF
  fi

  if [ ! -z "@XLF@" ];
  then
cat <<EOF
NANOS6_XLMFC="@abs_top_builddir@/src/driver/plaincxx --output-dir=@abs_top_builddir@/tests --profile=xlmfc --config-dir=@abs_top_builddir@/config --verbose"
compile_versions="\${compile_versions} nanos6_xlmfc"
test_FC_nanos6_xlmfc="\${NANOS6_XLMFC}"
test_FFLAGS_nanos6_xlmfc=" "
test_LDFLAGS_nanos6_xlmfc="@abs_top_builddir@/lib/perish.o"
EOF
  fi
fi


# for nanos6_variant in @NANOS6_VARIANTS@;
for nanos6_variant in optimized;
do
cat <<EOF
runner=taskset
exec_versions="\${exec_versions} nanos6_${nanos6_variant}"
test_ENV_nanos6_${nanos6_variant}="NANOS6_LOADER_VERBOSE=1 NANOS6='${nanos6_variant}'"
EOF

done
