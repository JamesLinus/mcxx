#!@BASH@

if [ -z "@NANOX_INCLUDES@" -o "@NANOX_SSE@" = "no" ];
then

cat <<EOF
test_ignore=yes
EOF
  
exit

fi

source @abs_builddir@/mercurium-libraries

cat <<EOF
MCC="@abs_top_builddir@/src/driver/mcxx --output-dir=@abs_top_builddir@/tests --profile=mcc --config-dir=@abs_top_builddir@/config --verbose"
MCXX="@abs_top_builddir@/src/driver/mcxx --output-dir=@abs_top_builddir@/tests --profile=mcxx --config-dir=@abs_top_builddir@/config --verbose"
EOF


COMMON_NANOX_CFLAGS=-DNANOX

cat <<EOF
compile_versions="\${compile_versions} nanox_mercurium"

test_CC_nanox_mercurium="\${MCC}"
test_CXX_nanox_mercurium="\${MCXX}"

if [ "$1" = "svml" ];
then

test_CFLAGS_nanox_mercurium="--simd --openmp --svml --fast-math  -std=gnu99 ${COMMON_NANOX_CFLAGS}"
test_CXXFLAGS_nanox_mercurium="--simd --openmp --fast-math ${COMMON_NANOX_CFLAGS}"
else
test_CFLAGS_nanox_mercurium="--simd --openmp -std=gnu99 ${COMMON_NANOX_CFLAGS}"
test_CXXFLAGS_nanox_mercurium="--simd --openmp ${COMMON_NANOX_CFLAGS}"
fi

test_LDFLAGS_nanox_mercurium="-L@abs_top_builddir@/lib -lperish"

EOF


if [ ! -z "@ICC@" ];
then
cat <<EOF
IMCC="@abs_top_builddir@/src/driver/mcxx --output-dir=@abs_top_builddir@/tests --profile=imcc --config-dir=@abs_top_builddir@/config --verbose"
compile_versions="\${compile_versions} nanox_imcc"
test_CC_nanox_imcc="\${IMCC}"

if [ "$1" = "svml" ];
then
test_CFLAGS_nanox_imcc="--simd --openmp --svml --fast-math -std=gnu99  --enable-ms-builtins ${PROGRAMMING_MODEL} ${COMMON_NANOX_CFLAGS}"
test_CXXFLAGS_nanox_imcc="--simd --openmp --svml --fast-math -std=gnu99  --enable-ms-builtins ${PROGRAMMING_MODEL} ${COMMON_NANOX_CFLAGS}"
t
else
test_CFLAGS_nanox_imcc="--simd --openmp -std=gnu99 --Wn,-no-fast-transcendentals,-fp-model,precise --enable-ms-builtins ${PROGRAMMING_MODEL} ${COMMON_NANOX_CFLAGS}"
test_CXXFLAGS_nanox_imcc="--simd --openmp -std=gnu99 --Wn,-no-fast-transcendentals,-fp-model,precise --enable-ms-builtins ${PROGRAMMING_MODEL} ${COMMON_NANOX_CFLAGS}"
t
fi

test_LDFLAGS_nanox_imcc="-L@abs_top_builddir@/lib -lperish"
EOF

fi

cat <<EOF
exec_versions="1thread"

test_ENV_1thread="OMP_NUM_THREADS='1'"
EOF



